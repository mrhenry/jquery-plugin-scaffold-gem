class Jplugin < Thor
  include Thor::Actions

  desc "compile", "Compiles js file to public/"
  def compile
    relative = '<%= name %>.js'
    run( "closure --js #{relative} --js_output_file ./public/#{relative.gsub(".js",".min.js")}" )
  end

  class Release < self

    desc "patch", "Release patch version"
    def patch
      git_status = run( '[[ $(git diff --shortstat 2> /dev/null | tail -n1) != "" ]] && echo "dirty"', :capture => true )

      unless git_status =~ /^dirty/
        gsub_file( '<%= name %>.js', /Version[:].+$/) do |match|
          label, version = *match.split(':', 2)
          parts = version.strip.split('.')
          parts[2] = parts[2].to_i + 1
          "#{label}: #{parts.join('.')}"
        end

      else
        say( 'Your git branch is not clean' )

      end
    end

    desc "minor", "Release minor version"
    def minor
      gsub_file( '<%= name %>.js', /Version[:].+$/) do |match|
        label, version = *match.split(':', 2)
        parts = version.strip.split('.')
        parts[1] = parts[1].to_i + 1
        "#{label}: #{parts.join('.')}"
      end
    end

    desc "patch", "Release major version"
    def major
      gsub_file( '<%= name %>.js', /Version[:].+$/) do |match|
        label, version = *match.split(':', 2)
        parts = version.strip.split('.')
        parts[0] = parts[0].to_i + 1
        "#{label}: #{parts.join('.')}"
      end
    end

  end

end